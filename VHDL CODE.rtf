{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 LIBRARY ieee;\
USE ieee.std_logic_1164.all;\
USE ieee.std_logic_unsigned.all;\
USE ieee.numeric_std.all;\
\
entity ALU_unit is\
port ( clk, reset : in std_logic ;\
Reg1, Reg2 : in std_logic_vector(7 downto 0); -- 8-bit inputs A & B from Reg. 1 & Reg. 2\
--id: in STD_logic_vector(3 downto 0);\
opcode : in std_logic_vector(7 downto 0); -- 8-bit opcode from Decoder\
Result : out std_logic_vector(7 downto 0));\
--id_result: OUT STD_logic); -- 8-bit Result\
end ALU_unit ;\
architecture calculation of ALU_unit is\
begin\
process ( clk, reset)\
begin\
	if reset = '1' then Result <= "00000000" ;\
	elsif (clk'EVENT AND clk = '1') then\
		case opcode is\
			when "00000001" =>\
				Result <= Reg1 - Reg2;\
			when "00000010" =>\
				Result <= (Reg2 xor "11111111") + "00000001";\
			when "00000100" =>\
				Result <= (Reg1(7 downto 4) & Reg2(3 downto 0));\
			when "00001000" =>\
				Result<= "00000000";\
			when "00010000" =>\
				Result <= Reg2 - "00000101";\
			when "00100000" =>\
				Result <= (Reg1(0)& Reg1(1)& Reg1(2)& Reg1(3)& Reg1(4)& Reg1(5)& Reg1(6)& Reg1(7) );\
			when "01000000" =>\
				Result <= ("111" & Reg2(7 downto 3));\
			when "10000000" =>\
				Result <= Reg1 + "00000011";\
			when others =>\
				Result <= "00000000";\
		end case ;\
	end if ;\
end process ;\
--process (id) \
--begin \
--id_result <= id(0);\
--end process;\
end calculation ;}